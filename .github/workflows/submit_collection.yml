name: submit_collection

on:
  pull_request_target:
    types: [opened, reopened, edited]
    paths:
    - 'collections/**.md'

env:
  remote: 'Innovation-Information-Initiative/Dataset-Index-Sheet-Tracker'
  branch: main
jobs:
  submit:
    runs-on: ubuntu-latest
    name: Handling additions and edits to index collections
    steps:

      - name: get PR branch
        run: |
          echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: "refs/pull/${{ github.event.number }}/merge"
          ssh-key: "${{ secrets.COMMIT_KEY }}"

      - name: Install Python 3
        uses: actions/setup-python@v1
        with:
          python-version: 3.6

      - name: Set up Python environment
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install python-frontmatter

      - name: Fetch
        run: |
          git fetch origin pull/${{ github.event.number }}/head:${{ env.BRANCH_NAME }}
          git checkout ${{ env.BRANCH_NAME }}

      - id: 'read_files'
        uses: Ana06/get-changed-files@v2.0.0

      - name: generate UUIDs for submission files
        id: changed_files
        run: |
          for added_file in ${{ steps.read_files.outputs.added }}; do
            if [ "${added_file: -3}" == ".md" ]
            then
              echo "this is a markdown file ${added_file}"
              echo "::set-output name=commit_files::true"
              python3 scripts/submit_collection.py ${added_file}
            fi
          done

      - name: Commit files
        if: steps.changed_files.outputs.commit_files == 'true'
        run: |
            git status
            git config user.name github-actions
            git config user.email github-actions@github.com
            git add collections/*.md
            git commit -m "accepted new collection PR (#${{ github.event.number }})"
            git push --set-upstream origin ${{ env.BRANCH_NAME }}

      - name: Checkout to main branch
        uses: actions/checkout@v2
        with:
          ssh-key: "${{ secrets.COMMIT_KEY }}"

      - name: Commit merge
        run: |
            git fetch
            git config pull.rebase false
            git pull origin ${{ env.BRANCH_NAME }}
            git pull
            git push